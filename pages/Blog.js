import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import BlogPost from '../Components/BlogPost'
import fs from 'fs'
import InfiniteScroll from 'react-infinite-scroll-component';
import Loader from '../Components/Loader';

const Blog = (props) => {
  const [blogList, setBlogList] = useState(props.fileContentList)
  const [count, setCount] = useState(2);

  const fetchData = async () => {
    let data = await fetch(`http://localhost:3000/api/allBlogs?count=${count + 2}`)
    let content = await data.json();
    setCount(count + 2);
    setBlogList(content)
  };
  return (
    <div>
      <div>
      </div>
      <Head>
        <title>Hunting Coder | Blog</title>cosnole
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='w-screen'>
        <div className='w-100 text-center text-3xl my-10 font-semibold'>
          <h1 className=''>All blogs by Hunter Coder</h1>
        </div>
        <div className='w-1/3 mx-auto'>
          <InfiniteScroll
            dataLength={blogList.length}
            next={fetchData}
            hasMore={props.currLen !== blogList.length}
            loader={<Loader />}
            endMessage={
              <p style={{ textAlign: 'center' }}>
                <b>Yay! You have seen it all</b>
              </p>
            }
          >
            {blogList.map((item, idx) => {
              return (
                <BlogPost key={idx} blogContent={item} />
              )
            })}
          </InfiniteScroll>
        </div>
      </main>

    </div>
  )
}

export async function getStaticProps(context) {
  let fileContentList = [];
  let data = await fs.promises.readdir("blogData");
  let currLen = data.length;
  for (let i = 0; i < 6; i++) {
    const fileName = data[i];
    let fileContent = await fs.promises.readFile(('blogData/' + fileName), 'utf-8');
    fileContentList.push(JSON.parse(fileContent));
  }
  return {
    props: {
      fileContentList, currLen

    }
  }
}

export default Blog