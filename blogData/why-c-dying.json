{
    "title": "Is C/C++ a dying language in today's world",
    "desc": "WThere are actually three questions here. First, is C still used? Fuck yes. Second, is C worth knowing, even for jobs that don't use it? Yes. Lastly, is C going to die any time soon? Fuck no. The only thing that is happening (the only thing she got half-right), is people are moving away from C for problems that aren't conducive to C (of course, this happened a long time ago, this is not a current trend). C is the right choice for low-level, embedded, systems, or computationally intensive code. If you are pumping out CRUD apps in some C# cube-farm, you probably won't be using much C, and you probably shouldn't be using much C. Those people are phasing out C, and she probably only knows those people, therefore she's giving you insight into a subset of the market, and pretending she knows the rest. She doesn't. That brings us to point #2: a good manager will happily hire a strong C/C++ programmer (I am including C++ but you can substitute any OO language) for a C# position because moving up the language chain is nowhere near as difficult as moving down. Knowing C well will make you substantially more versatile, and will make you a better programmer in the long run. Last but not least: reports of C's demise is greatly exaggerated because C is nothing but a portable assembler. C will not die until the day when a simple imperative language no longer matches the underlying computer architecture. The only other path to death would be for some other language to replace C as the low-level portable assembler, and that's so extremely unlikely given the amont of code written in C as to be ridiculous..",
    "author": "Asad Khan",
    "slug": "wwhy-c-dying"
}