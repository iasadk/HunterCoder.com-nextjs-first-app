{
    "title": "How to Learn React.js in 2022 to get a Job",
    "desc": "Software engineering is not just all about learning a language and building some software. As a software engineer or software developer, you are expected to write good software. So the question is what makes good software?. Good software can be judged by reading some piece of code written in the project. If the code is easy to understand and easy to change then definitely it’s a good software and developers love to work on that.It doesn’t matter if you are a beginner or an experienced programmer, you should always try to become a good programmer (not just a programmer…). Remember that you are responsible for the quality of your code so make your program good enough so that other developers can understand and they don’t mock you every time to understand the messy code you wrote in your project. What Makes a Clean Code: Before we discuss the art of writing clean and better code let’s see some characteristics of it… Clean code should be readable. If someone is reading your code they should have feeling of reading a poetry or prose. Clean code should be elegant. It should be pleasing to read and it should make you smile. Clean code should be simple and easy to understand. It should follow single responsibility principle (SRP). Clean code should be easy to understand, easy to change and easy to taken care of. Clean code should run all the tests.Classes, Functions or methods are a good way to organize the code in any programming language so when you are writing the code you really need to take care that how to write a function that communicates it’s intent. Most of the beginners do this mistake that they write a function that can handle and do almost everything (perform multiple tasks). It makes your code more confusing for developers and creates problems when they need to fix some bugs or find some piece of code. So when you are writing a function you should remember two things to make your function clean and easy to understand… They should be small. They should do only one thing and they should do it well. The above two points clearly mention that your function should follow single responsibility principle. Which means it shouldn’t have nested structure or it should not have more than two indent level. Following this technique make your code much more readable and other developers can easily understand or implement another feature if your function fulfills a specific task. Also, make sure that your function should not have more than three arguments. More arguments perform more tasks so try to keep the arguments as less as possible. Passing more than three arguments makes your code confusing, quite large and hard to debug if any problem would be there. If your function has try/catch/finally statement then make a separate function containing just the try-catch-finally statements. Take care of your function name as well. Use a descriptive name for your function which should clearly specify that what it does.",
    "author": "Mark Robert",
    "slug": "good-code"
}